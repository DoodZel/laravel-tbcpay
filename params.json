{"name":"TBC","tagline":"TBC Payment System for Laravel 5.*","body":"# TBC\r\n\r\n[![TBC](http://i.imgsafe.org/09cb0be.jpg)](https://github.com/zgabievi/TBC)\r\n\r\n[![Latest Stable Version](https://poser.pugx.org/zgabievi/TBC/version.png)](https://packagist.org/packages/zgabievi/tbc)\r\n[![Total Downloads](https://poser.pugx.org/zgabievi/TBC/d/total.png)](https://packagist.org/packages/zgabievi/tbc)\r\n[![License](https://poser.pugx.org/zgabievi/TBC/license)](https://packagist.org/packages/zgabievi/tbc)\r\n\r\nTBC Payment System for [Laravel 5.*](http://laravel.com/)\r\n\r\nInspired from [tbcpay-php](https://github.com/wearede/tbcpay-php), created by [Sandro Dzneladze](https://github.com/sandrodz)\r\n\r\n## Table of Contents\r\n- [Installation](#installation)\r\n    - [Composer](#composer)\r\n    - [Laravel](#laravel)\r\n- [Documentation](#documentation)\r\n- [Usage](#usage)\r\n- [Examples](#examples)\r\n- [Config](#config)\r\n- [License](#license)\r\n\r\n## Installation\r\n\r\n### Composer\r\n\r\nRun composer command in your terminal.\r\n\r\n    composer require zgabievi/tbc\r\n\r\n### Laravel\r\n\r\nOpen `config/app.php` and find the `providers` key. Add `TBCServiceProvider` to the array.\r\n\r\n```php\r\nGabievi\\TBC\\TBCServiceProvider::class\r\n```\r\n\r\nFind the `aliases` key and add `Facade` to the array. \r\n\r\n```php\r\n'TBC' => Gabievi\\TBC\\TBCFacade::class\r\n```\r\n\r\n## Documentation\r\n\r\nThere are two types of transaction within this system:\r\n\r\n1. **SMS** is direct payment, where money is charged in 1 event.\r\n2. **DMS** is delayed payment, requires 2 events:\r\n    - First event blocks money on the card\r\n    - Second event takes money (It can be carried out when product is shipped to the customer, for example)\r\n\r\nIn every 24 hour the merchant must send the close the business day request to bank server\r\n\r\n## Usage\r\n\r\nThere are several methods you need to know:\r\n\r\n- `SMSTransaction($amount, $currency = 981, $description = '', $language = 'GE')`\r\n- `DMSAuthorization($amount, $currency = 981, $description = '', $language = 'GE')`\r\n- `DMSTransaction($txn_id, $amount, $currency = 981, $description = '', $language = 'GE')`\r\n- `GetTransactionResult($txn_id)`\r\n- `ReverseTransaction($txn_id, $amount = '', $suspected_fraud = '')`\r\n- `RefundTransaction($txn_id)`\r\n- `CreditTransaction($txn_id, $amount = '')`\r\n- `CloseDay()`\r\n\r\n## Examples\r\n\r\nIn your `routes.php` create route:\r\n\r\n```php\r\nRoute::get('payment/{status}', function($status) {\r\n    if ($status == 'success') {\r\n        return TBC::GetTransactionResult(request('trans_id'));\r\n    }\r\n    \r\n    return 'FAIL!';\r\n})->where('status', 'success|fail');\r\n\r\nRoute::get('pay', function() {\r\n    return view('payment.tbc', [\r\n        'start' => TBC::SMSTransaction(1)\r\n    ]);\r\n});\r\n```\r\n\r\nCreate `payment/tbc.blade.php`. It should look like:\r\n\r\n```php\r\n<!doctype html>\r\n<html>\r\n<head>\r\n    <title>TBC</title>\r\n</head>\r\n<body>\r\n\r\n@if(isset($start['error']))\r\n    <h2>Error:</h2>\r\n    <h1>{{ $start['error'] }}</h1>\r\n@elseif(isset($start['TRANSACTION_ID']))\r\n    <form name=\"returnform\" id=\"Pay\" action=\"https://securepay.ufc.ge/ecomm2/ClientHandler\" method=\"POST\">\r\n        <input type=\"hidden\" name=\"trans_id\" value=\"{{ $start['TRANSACTION_ID'] }}\">\r\n\r\n        <noscript>\r\n            <center>Please click the submit button below.<br>\r\n            <input type=\"submit\" name=\"submit\" value=\"Submit\"></center>\r\n        </noscript>\r\n    </form>\r\n    \r\n    <script>\r\n        window.onload = document.forms.Pay.submit;\r\n    </script>\r\n@endif\r\n\r\n</body>\r\n</html>\r\n```\r\n\r\n\r\n## Config\r\n\r\nPublish TBC config file using command:\r\n\r\n```\r\nphp artisan vendor:publish\r\n```\r\n\r\nCreated file `config\\tbc.php`. Inside you can change configuration as you wish.\r\n\r\n## License\r\n\r\nTBC is an open-sourced laravel package licensed under the MIT license\r\n\r\n## TODO\r\n- [ ] Create tests\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}